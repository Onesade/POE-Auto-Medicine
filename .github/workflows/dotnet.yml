name: Build and Release

on:
  push:
    branches:
      - main       # 在 main 分支推送时触发 CI/CD 流程
  pull_request:
    branches:
      - main       # 在提交 PR 请求到 main 分支时触发 CI/CD 流程

jobs:
  build:
    runs-on: ubuntu-latest  # 选择运行环境（可以选择 Ubuntu，Windows，或者 macOS）

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 检出项目代码

    - name: Set up .NET (如果是.NET 项目，根据需要设置)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0'  # 选择需要的 .NET 版本

    - name: Restore dependencies
      run: dotnet restore  # 恢复依赖

    - name: Build project
      run: dotnet build --configuration Release  # 编译项目

    - name: Run tests
      run: dotnet test  # 可选：运行测试，如果有测试的话

    - name: Publish project
      run: dotnet publish -c Release -o ./publish  # 发布项目

  release:
    runs-on: ubuntu-latest  # 如果使用其他平台，修改此处
    needs: build  # 依赖于编译步骤，确保编译成功后才进行发布

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # 检出项目代码

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4  # 使用 v4 或更高版本
      with:
        name: release-build
        path: ./publish

    - name: Create Release
      id: create_release
      run: |
        gh release create v1.0.0 ./publish/* --title "Release v1.0.0" --notes "Automated release"  # 使用 GitHub CLI 创建新版本发布
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 的自动 token 进行身份验证
